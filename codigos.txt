DELIMITER $$

CREATE TRIGGER T_Insert AFTER INSERT ON viagem
FOR EACH ROW
BEGIN
    UPDATE onibus o 
    SET o.lugares = o.lugares - 1 
    WHERE o.id = NEW.id_onibus;
END$$

CREATE TRIGGER T_Delete AFTER DELETE ON viagem
FOR EACH ROW
BEGIN
    UPDATE onibus o 
    SET o.lugares = o.lugares + 1 
    WHERE o.id = OLD.id_onibus;
END$$

DELIMITER ;



















1)

CREATE TABLE onibus (
  id int AUTO_INCREMENT PRIMARY KEY,
  modelo varchar(90),
  lugares int, 
  destino varchar(255)
  );
CREATE TABLE passageiro (
  id int AUTO_INCREMENT PRIMARY KEY,
  nome varchar(50),
  data_nascimento varchar(10)
  );
 CREATE TABLE viagem (
  id int AUTO_INCREMENT PRIMARY KEY,
  id_onibus int,
  FOREIGN KEY (id_onibus) REFERENCES onibus (id),
  id_passageiro int,
  FOREIGN KEY (id_passageiro) REFERENCES passageiro (id),
  data_viagem varchar(10)
  );
=======================================================================================
2)
DELIMITER && 
  CREATE PROCEDURE crud_onibus (IN var_id INT, var_modelo VARCHAR(90), var_lugares int, var_destino varchar(255), opcao int)
  BEGIN
  IF (EXISTS(SELECT id FROM onibus WHERE id = var_id)) THEN
  IF (opcao = 1) THEN
  UPDATE onibus SET modelo = var_modelo, lugares = var_lugares, destino = var_destino WHERE id = var_id;
  ELSE
  DELETE FROM onibus WHERE id = var_id;
  END IF;
  ELSE
  INSERT INTO onibus VALUES (var_id, var_modelo, var_lugares, var_destino);
  END IF;
  END
  &&

DELIMITER &&

	CREATE PROCEDURE listar_onibus(IN var_id INT)
    BEGIN    	
        IF (var_id IS NULL) THEN
        	SELECT * FROM onibus ORDER BY modelo;
        ELSE
        	SELECT * FROM onibus WHERE id = var_id;
        END IF;        
    END
&&
CREATE VIEW view_onibus AS
  select o.modelo ,o.lugares, o.destino,v.data_viagem
  FROM onibus o
  LEFT JOIN viagem v
  on o.id = v.id_onibus;
  
///////////////////////////////////////////////////////////////////
CREATE PROCEDURE crud_passageiro (IN var_id INT, var_nome VARCHAR(50), var_data_nascimento varchar(10), opcao int)
  BEGIN
  IF (EXISTS(SELECT id FROM passageiro WHERE id = var_id)) THEN
 	 IF (opcao = 1) THEN
 		 UPDATE passageiro SET nome = var_nome, data_nascimento = var_data_nascimento WHERE id = var_id;
 	 ELSE
 		 DELETE FROM passageiro WHERE id = var_id;
 	 END IF;
  ELSE
  	INSERT INTO passageiro VALUES (var_id, var_nome, var_data_nascimento);
  END IF;
  END;

DELIMITER &&
	CREATE PROCEDURE listar_passageiro(IN var_id INT)
    BEGIN    	
        IF (var_id IS NULL) THEN
        	SELECT * FROM passageiro ORDER BY nome;
        ELSE
        	SELECT * FROM passageiro WHERE id = var_id;
        END IF;        
    END
&&

CREATE VIEW view_passageiro AS
  select p.nome,p.data_nascimento,v.data_viagem
  FROM passageiro p
  LEFT JOIN viagem v
  on p.id = v.id_passageiro;

/////////////////////////////////////////////////
 DELIMITER && 
  CREATE PROCEDURE crud_viagem(IN var_id INT,var_id_onibus int,var_id_passageiro int, var_data_viagem varchar(10),opcao int)
  BEGIN
  IF (EXISTS(SELECT id FROM viagem WHERE id = var_id)) THEN
  IF (opcao = 1) THEN
  UPDATE viagem SET id_onibus = var_id_onibus, id_onibus = var_id_passageiro, data_viagem = var_data_viagem WHERE id = var_id;
  ELSE
  DELETE FROM viagem WHERE id = var_id;
  END IF;
  ELSE
  INSERT INTO viagem VALUES (var_id, var_id_onibus, var_id_passageiro, var_data_viagem);
  END IF;
  END
  &&

DELIMITER &&
	CREATE PROCEDURE listar_viagem(IN var_id INT)
    BEGIN    	
        IF (var_id IS NULL) THEN
        	SELECT * FROM viagem ORDER BY id;
        ELSE
        	SELECT * FROM viagem WHERE id = var_id;
        END IF;        
    END
&&


 CREATE VIEW view_viagem AS
  select p.nome, o.modelo , o.destino,v.data_viagem
  FROM viagem v
  INNER JOIN passageiro p
  on p.id = v.id_passageiro
  INNER JOIN onibus o
  on o.id = v.id_onibus;


3)	